# This config is equivalent to both the '.circleci/extended/orb-free.yml' and the base '.circleci/config.yml'
version: 2.1

commands:
  destroy-environment:
    description: Destroy back-end and front-end cloudformation stacks given a workflow ID.
    steps:
      - run:
          name: Destroy environments
          when: on_fail
          command: |
            aws s3 rb s3://udapeople-${CIRCLE_WORKFLOW_ID:0:7} --force
            aws cloudformation delete-stack --stack-name udapeople-backend-${CIRCLE_WORKFLOW_ID:0:7}
            aws cloudformation delete-stack --stack-name udapeople-frontend-${CIRCLE_WORKFLOW_ID:0:7}

  revert-migrations:
    description: Revert the last migration if successfully run in the current workflow.
    steps:
      - run:
          name: Revert migrations
          when: on_fail
          command: |
            SUCCESS=$(curl --insecure  https://kvdb.io/XBw7Q4RQSmfAekgsdEGW8U/migration_${CIRCLE_WORKFLOW_ID:0:7})
            # Curl command here to see if there was a successful migration associated with the workflow id, store result in SUCCESS variable
            if [ ${SUCCESS} = "success" ];
            then
              cd ~/backend
              npm install
              npm run migration:revert
            fi

jobs:
  build-frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: Build Front-end
          command: |
            cd frontend
            npm i
            npm run build
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-build

  build-backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: Build Back-end
          command: |
            cd backend
            npm i
            npm run build
      - save_cache:
            paths: [backend/node_modules]
            key: backend-build

workflows:
  default:
    jobs:
      - build-frontend
      - build-backend


